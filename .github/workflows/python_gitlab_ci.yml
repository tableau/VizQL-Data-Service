name: Python SDK CI Configuration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  generateStub:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - name: Check out repository 
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install setuptools
        pip install jdk4py
        pip install openapi-generator-cli

    - name: Verify openapi-generator-cli installation
      run: |
        openapi-generator-cli version

    - name: Run generate script
      run: |
        cd python_sdk
        chmod +x scripts/generate_stub.sh
        bash scripts/generate_stub.sh

    - name: Upload client artifacts
      uses: actions/upload-artifact@v4
      with:
        name: generated-client-${{ matrix.python-version }}
        path: python_sdk/openapi_client/

  build:
    needs: [generateStub]
    if: needs.generateStub.result == 'success'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download client artifacts
      uses: actions/download-artifact@v4
      with:
        name: generated-client-${{ matrix.python-version }}
        path: python_sdk/openapi_client/

    - name: Run build script
      run: |
        cd python_sdk
        chmod +x scripts/build.sh
        bash scripts/build.sh

    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-${{ matrix.python-version }}
        path: python_sdk/dist/ 

  test:
    needs: [generateStub, build]
    if: needs.generateStub.result == 'success' && needs.build.result == 'success'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download client artifacts
      uses: actions/download-artifact@v4
      with:
        name: generated-client-${{ matrix.python-version }}
        path: python_sdk/openapi_client/

    - name: Download package artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-${{ matrix.python-version }}
        path: python_sdk/dist/

    - name: Run test script
      run: |
        cd python_sdk
        chmod +x scripts/test.sh
        bash scripts/test.sh

    - name: Upload coverage reports artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports-${{ matrix.python-version }}
        path: python_sdk/coverage.xml

  publish:
    needs: [generateStub, build, test]
    if: needs.generateStub.result == 'success' && needs.build.result == 'success' && needs.test.result == 'success'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download package artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-${{ matrix.python-version }}
        path: python_sdk/dist/
    
    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      environment:
        name: testpypi
      permissions:
        id-token: write
      with:
        repository-url: https://test.pypi.org/legacy/
          
    - name: Publish distribution to PyPI
      if: ${{ startsWith (github.ref, 'refs/tags') }}
      uses: pypa/gh-action-pypi-publish@release/v1
      environment:
        name: pypi
      permissions:
        id-token: write